# Makefile.in generated by automake 1.10.1 from Makefile.am.
# poppler/Makefile.  Generated from Makefile.in by configure.

# Copyright (C) 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002,
# 2003, 2004, 2005, 2006, 2007, 2008  Free Software Foundation, Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.





pkgdatadir = $(datadir)/poppler
pkglibdir = $(libdir)/poppler
pkgincludedir = $(includedir)/poppler
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = i686-pc-linux-gnu
host_triplet = i686-pc-linux-gnu
subdir = poppler
DIST_COMMON = $(am__poppler_include_HEADERS_DIST) \
	$(srcdir)/Makefile.am $(srcdir)/Makefile.in \
	$(srcdir)/poppler-config.h.in
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/m4/acx_pthread.m4 \
	$(top_srcdir)/m4/define-dir.m4 $(top_srcdir)/m4/gtk-doc.m4 \
	$(top_srcdir)/m4/libjpeg.m4 $(top_srcdir)/m4/libpng.m4 \
	$(top_srcdir)/m4/qt.m4 $(top_srcdir)/configure.ac
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
mkinstalldirs = $(install_sh) -d
CONFIG_HEADER = $(top_builddir)/config.h poppler-config.h
CONFIG_CLEAN_FILES =
am__vpath_adj_setup = srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`;
am__vpath_adj = case $$p in \
    $(srcdir)/*) f=`echo "$$p" | sed "s|^$$srcdirstrip/||"`;; \
    *) f=$$p;; \
  esac;
am__strip_dir = `echo $$p | sed -e 's|^.*/||'`;
am__installdirs = "$(DESTDIR)$(libdir)" \
	"$(DESTDIR)$(poppler_includedir)"
libLTLIBRARIES_INSTALL = $(INSTALL)
LTLIBRARIES = $(lib_LTLIBRARIES) $(noinst_LTLIBRARIES)
libpoppler_arthur_la_LIBADD =
am__libpoppler_arthur_la_SOURCES_DIST = ArthurOutputDev.h \
	ArthurOutputDev.cc
#am_libpoppler_arthur_la_OBJECTS = ArthurOutputDev.lo
libpoppler_arthur_la_OBJECTS = $(am_libpoppler_arthur_la_OBJECTS)
#am_libpoppler_arthur_la_rpath =
libpoppler_cairo_la_LIBADD =
am__libpoppler_cairo_la_SOURCES_DIST = CairoFontEngine.cc \
	CairoFontEngine.h CairoOutputDev.cc CairoOutputDev.h
#am_libpoppler_cairo_la_OBJECTS =  \
#	CairoFontEngine.lo CairoOutputDev.lo
libpoppler_cairo_la_OBJECTS = $(am_libpoppler_cairo_la_OBJECTS)
#am_libpoppler_cairo_la_rpath =
am__DEPENDENCIES_1 =
#am__DEPENDENCIES_2 = $(am__DEPENDENCIES_1)
am__DEPENDENCIES_3 =  \
	$(top_builddir)/splash/libsplash.la
am__DEPENDENCIES_4 = $(am__DEPENDENCIES_1)
am__DEPENDENCIES_5 = $(am__DEPENDENCIES_1)
#am__DEPENDENCIES_6 = $(am__DEPENDENCIES_1)
#am__DEPENDENCIES_7 = $(am__DEPENDENCIES_1)
am__DEPENDENCIES_8 = $(am__DEPENDENCIES_1)
libpoppler_la_DEPENDENCIES = $(top_builddir)/goo/libgoo.la \
	$(top_builddir)/fofi/libfofi.la $(am__DEPENDENCIES_2) \
	$(am__DEPENDENCIES_3) $(am__DEPENDENCIES_4) \
	$(am__DEPENDENCIES_5) $(am__DEPENDENCIES_6) \
	$(am__DEPENDENCIES_7) $(am__DEPENDENCIES_8) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1)
am__libpoppler_la_SOURCES_DIST = SplashOutputDev.cc DCTStream.h \
	DCTStream.cc FlateStream.h FlateStream.cc JPXStream.h \
	JPXStream.cc JPEG2000Stream.h JPEG2000Stream.cc ABWOutputDev.h \
	ABWOutputDev.cc Annot.cc Array.cc BuiltinFont.cc \
	BuiltinFontTables.cc Catalog.cc CharCodeToUnicode.cc CMap.cc \
	DateInfo.cc Decrypt.cc Dict.cc Error.cc FileSpec.cc \
	FontEncodingTables.cc Form.cc FontInfo.cc Function.cc Gfx.cc \
	GfxFont.cc GfxState.cc GlobalParams.cc JArithmeticDecoder.cc \
	JBIG2Stream.cc Lexer.cc Link.cc Movie.cc NameToCharCode.cc \
	Object.cc OptionalContent.cc Outline.cc OutputDev.cc Page.cc \
	PageTransition.cc Parser.cc PDFDoc.cc PDFDocEncoding.cc \
	PopplerCache.cc ProfileData.cc PreScanOutputDev.cc \
	PSTokenizer.cc Stream.cc UnicodeMap.cc UnicodeTypeTable.cc \
	XRef.cc PSOutputDev.cc TextOutputDev.cc PageLabelInfo.h \
	PageLabelInfo.cc SecurityHandler.cc Sound.cc XpdfPluginAPI.cc
am__objects_1 = SplashOutputDev.lo
am__objects_2 = DCTStream.lo
#am__objects_3 = FlateStream.lo
am__objects_4 = JPXStream.lo
#am__objects_4 = JPEG2000Stream.lo
am__objects_5 = ABWOutputDev.lo
am_libpoppler_la_OBJECTS = $(am__objects_1) $(am__objects_2) \
	$(am__objects_3) $(am__objects_4) $(am__objects_5) Annot.lo \
	Array.lo BuiltinFont.lo BuiltinFontTables.lo Catalog.lo \
	CharCodeToUnicode.lo CMap.lo DateInfo.lo Decrypt.lo Dict.lo \
	Error.lo FileSpec.lo FontEncodingTables.lo Form.lo FontInfo.lo \
	Function.lo Gfx.lo GfxFont.lo GfxState.lo GlobalParams.lo \
	JArithmeticDecoder.lo JBIG2Stream.lo Lexer.lo Link.lo Movie.lo \
	NameToCharCode.lo Object.lo OptionalContent.lo Outline.lo \
	OutputDev.lo Page.lo PageTransition.lo Parser.lo PDFDoc.lo \
	PDFDocEncoding.lo PopplerCache.lo ProfileData.lo \
	PreScanOutputDev.lo PSTokenizer.lo Stream.lo UnicodeMap.lo \
	UnicodeTypeTable.lo XRef.lo PSOutputDev.lo TextOutputDev.lo \
	PageLabelInfo.lo SecurityHandler.lo Sound.lo XpdfPluginAPI.lo
libpoppler_la_OBJECTS = $(am_libpoppler_la_OBJECTS)
libpoppler_la_LINK = $(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CXXLD) $(AM_CXXFLAGS) \
	$(CXXFLAGS) $(libpoppler_la_LDFLAGS) $(LDFLAGS) -o $@
DEFAULT_INCLUDES = -I. -I$(top_builddir)
depcomp = $(SHELL) $(top_srcdir)/depcomp
am__depfiles_maybe = depfiles
CXXCOMPILE = $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
LTCXXCOMPILE = $(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
CXXLD = $(CXX)
CXXLINK = $(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=link $(CXXLD) $(AM_CXXFLAGS) $(CXXFLAGS) $(AM_LDFLAGS) \
	$(LDFLAGS) -o $@
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
LTCOMPILE = $(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
CCLD = $(CC)
LINK = $(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) $(AM_LDFLAGS) \
	$(LDFLAGS) -o $@
SOURCES = $(libpoppler_arthur_la_SOURCES) \
	$(libpoppler_cairo_la_SOURCES) $(libpoppler_la_SOURCES)
DIST_SOURCES = $(am__libpoppler_arthur_la_SOURCES_DIST) \
	$(am__libpoppler_cairo_la_SOURCES_DIST) \
	$(am__libpoppler_la_SOURCES_DIST)
am__poppler_include_HEADERS_DIST = SplashOutputDev.h Annot.h Array.h \
	BuiltinFont.h BuiltinFontTables.h Catalog.h \
	CharCodeToUnicode.h CMap.h DateInfo.h Decrypt.h Dict.h Error.h \
	FileSpec.h FontEncodingTables.h FontInfo.h Form.h Function.h \
	Gfx.h GfxFont.h GfxState.h GfxState_helpers.h GlobalParams.h \
	JArithmeticDecoder.h JBIG2Stream.h Lexer.h Link.h Movie.h \
	NameToCharCode.h Object.h OptionalContent.h Outline.h \
	OutputDev.h Page.h PageTransition.h Parser.h PDFDoc.h \
	PDFDocEncoding.h PopplerCache.h ProfileData.h \
	PreScanOutputDev.h PSTokenizer.h Stream-CCITT.h Stream.h \
	UnicodeMap.h UnicodeMapTables.h UnicodeTypeTable.h \
	UnicodeCClassTables.h UnicodeCompTables.h \
	UnicodeDecompTables.h XRef.h CharTypes.h CompactFontTables.h \
	ErrorCodes.h NameToUnicodeTable.h PSOutputDev.h \
	TextOutputDev.h SecurityHandler.h UTF8.h XpdfPluginAPI.h \
	Sound.h poppler-config.h
poppler_includeHEADERS_INSTALL = $(INSTALL_HEADER)
HEADERS = $(poppler_include_HEADERS)
ETAGS = etags
CTAGS = ctags
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
ABIWORD_CFLAGS = -I/usr/include/libxml2  
ABIWORD_LIBS = -lxml2  
ACLOCAL = ${SHELL} /lab/download/poppler/missing --run aclocal-1.10
AMTAR = ${SHELL} /lab/download/poppler/missing --run tar
AR = ar
AS = as
AUTOCONF = ${SHELL} /lab/download/poppler/missing --run autoconf
AUTOHEADER = ${SHELL} /lab/download/poppler/missing --run autoheader
AUTOMAKE = ${SHELL} /lab/download/poppler/missing --run automake-1.10
AWK = gawk
CAIRO_CFLAGS = 
CAIRO_FEATURE = #undef POPPLER_HAS_CAIRO
CAIRO_LIBS = 
CAIRO_REQ = 
CAIRO_VERSION = 1.8.4
CC = gcc -std=gnu99
CCDEPMODE = depmode=gcc3
CFLAGS = -g -O2 $(PTHREAD_CFLAGS)
CPP = gcc -E
CPPFLAGS = 
CXX = g++
CXXCPP = g++ -E
CXXDEPMODE = depmode=gcc3
CXXFLAGS = -Wall -Wno-write-strings -Woverloaded-virtual -g -O2 $(PTHREAD_CFLAGS)
CYGPATH_W = echo
DEFS = -DHAVE_CONFIG_H
DEPDIR = .deps
DLLTOOL = dlltool
ECHO = echo
ECHO_C = 
ECHO_N = -n
ECHO_T = 
EGREP = /bin/grep -E
EXEEXT = 
FONTCONFIG_CFLAGS =  
FONTCONFIG_LIBS = -lfontconfig  
FREETYPE_CFLAGS = -I/usr/include/freetype2  
FREETYPE_CONFIG = 
FREETYPE_LIBS = -lfreetype  
GDK_CFLAGS = -I/usr/include/gtk-2.0 -I/usr/lib/gtk-2.0/include -I/usr/include/pango-1.0 -I/usr/include/glib-2.0 -I/usr/lib/glib-2.0/include -I/usr/include/cairo  
GDK_FEATURE = #define POPPLER_WITH_GDK 1
GDK_LIBS = -lgdk-x11-2.0 -lgdk_pixbuf-2.0 -lpangocairo-1.0 -lpango-1.0 -lcairo -lgobject-2.0 -lgmodule-2.0 -ldl -lglib-2.0  
GLIB_MKENUMS = /usr/bin/glib-mkenums
GREP = /bin/grep
GTKDOC_CHECK = /usr/bin/gtkdoc-check
GTKDOC_MKPDF = 
GTKDOC_REBASE = /usr/bin/gtkdoc-rebase
GTK_TEST_CFLAGS = -pthread -I/usr/include/gtk-2.0 -I/usr/lib/gtk-2.0/include -I/usr/include/atk-1.0 -I/usr/include/cairo -I/usr/include/pango-1.0 -I/usr/include/glib-2.0 -I/usr/lib/glib-2.0/include  
GTK_TEST_LIBS = -pthread -lgtk-x11-2.0 -lgdk-x11-2.0 -latk-1.0 -lpangocairo-1.0 -lpango-1.0 -lcairo -lgdk_pixbuf-2.0 -lgobject-2.0 -lgmodule-2.0 -ldl -lgthread-2.0 -lrt -lglib-2.0  
HTML_DIR = ${datadir}/gtk-doc/html
INSTALL = /usr/bin/install -c
INSTALL_DATA = ${INSTALL} -m 644
INSTALL_PROGRAM = ${INSTALL}
INSTALL_SCRIPT = ${INSTALL}
INSTALL_STRIP_PROGRAM = $(install_sh) -c -s
LCMS_CFLAGS = 
LCMS_LIBS = 
LDFLAGS = 
LIBJPEG_LIBS = -ljpeg
LIBOBJS = 
LIBOPENJPEG_LIBS = 
LIBPNG_LIBS = -lpng
LIBS = 
LIBTOOL = $(SHELL) $(top_builddir)/libtool
LN_S = ln -s
LTLIBOBJS = 
MAKEINFO = ${SHELL} /lab/download/poppler/missing --run makeinfo
MKDIR_P = /bin/mkdir -p
MOCQT4 = 
OBJDUMP = objdump
OBJEXT = o
PACKAGE = poppler
PACKAGE_BUGREPORT = https://bugs.freedesktop.org/enter_bug.cgi?product=poppler
PACKAGE_NAME = poppler
PACKAGE_STRING = poppler 0.11.2
PACKAGE_TARNAME = poppler
PACKAGE_VERSION = 0.11.2
PATH_SEPARATOR = :
PC_REQUIRES = 
PC_REQUIRES_PRIVATE = Requires.private: poppler = 0.11.2
PKG_CONFIG = /usr/bin/pkg-config
POPPLER_DATADIR = /usr/local/share/poppler
POPPLER_GLIB_CFLAGS = -I/usr/include/glib-2.0 -I/usr/lib/glib-2.0/include  
POPPLER_GLIB_DISABLE_DEPRECATED =  -DG_DISABLE_DEPRECATED -DGDK_DISABLE_DEPRECATED -DGDK_PIXBUF_DISABLE_DEPRECATED
POPPLER_GLIB_DISABLE_SINGLE_INCLUDES =  -DG_DISABLE_SINGLE_INCLUDES -DGTK_DISABLE_SINGLE_INCLUDES
POPPLER_GLIB_LIBS = -lgobject-2.0 -lglib-2.0  
POPPLER_MAJOR_VERSION = 0
POPPLER_MICRO_VERSION = 2
POPPLER_MINOR_VERSION = 11
POPPLER_QT4_CFLAGS = 
POPPLER_QT4_CXXFLAGS = 
POPPLER_QT4_LIBS = 
POPPLER_QT4_TEST_CFLAGS = 
POPPLER_QT4_TEST_LIBS = 
POPPLER_QT_CXXFLAGS = 
POPPLER_QT_LIBS = 
PTHREAD_CC = gcc -std=gnu99
PTHREAD_CFLAGS = -pthread
PTHREAD_LIBS = 
RANLIB = ranlib
SED = /bin/sed
SET_MAKE = 
SHELL = /bin/sh
STRIP = strip
VERSION = 0.11.2
XMKMF = 
X_CFLAGS = 
X_EXTRA_LIBS = 
X_LIBS = 
X_PRE_LIBS =  -lSM -lICE
ZLIB_LIBS = 
abs_builddir = /lab/download/poppler/poppler
abs_srcdir = /lab/download/poppler/poppler
abs_top_builddir = /lab/download/poppler
abs_top_srcdir = /lab/download/poppler
ac_ct_CC = gcc
ac_ct_CXX = g++
acx_pthread_config = 
am__include = include
am__leading_dot = .
am__quote = 
am__tar = ${AMTAR} chof - "$$tardir"
am__untar = ${AMTAR} xf -
auto_import_flags = 
bindir = ${exec_prefix}/bin
build = i686-pc-linux-gnu
build_alias = 
build_cpu = i686
build_os = linux-gnu
build_vendor = pc
builddir = .
create_shared_lib = 
datadir = ${datarootdir}
datarootdir = ${prefix}/share
docdir = ${datarootdir}/doc/${PACKAGE_TARNAME}
dvidir = ${docdir}
exec_prefix = ${prefix}
host = i686-pc-linux-gnu
host_alias = 
host_cpu = i686
host_os = linux-gnu
host_vendor = pc
htmldir = ${docdir}
includedir = ${prefix}/include
infodir = ${datarootdir}/info
install_sh = $(SHELL) /lab/download/poppler/install-sh
libdir = ${exec_prefix}/lib
libexecdir = ${exec_prefix}/libexec
localedir = ${datarootdir}/locale
localstatedir = ${prefix}/var
mandir = ${datarootdir}/man
mkdir_p = /bin/mkdir -p
oldincludedir = /usr/include
pdfdir = ${docdir}
prefix = /usr/local
program_transform_name = s,x,x,
psdir = ${docdir}
sbindir = ${exec_prefix}/sbin
sharedstatedir = ${prefix}/com
srcdir = .
sysconfdir = ${prefix}/etc
target_alias = 
top_builddir = ..
top_srcdir = ..
win32_libs = 
splash_sources = \
	SplashOutputDev.cc

splash_headers = \
	SplashOutputDev.h

splash_includes = \
	$(SPLASH_CFLAGS)

splash_libs = \
	$(SPLASH_LIBS)				\
	$(top_builddir)/splash/libsplash.la

#poppler_arthur = libpoppler-arthur.la
#libpoppler_arthur_la_SOURCES = \
#	ArthurOutputDev.h			\
#	ArthurOutputDev.cc

#arthur_includes = \
#	$(POPPLER_QT4_CFLAGS)

#arthur_libs = \
#	$(POPPLER_QT4_LIBS)

#poppler_cairo = libpoppler-cairo.la
#cairo_includes = \
#	$(CAIRO_CFLAGS)

#cairo_libs = \
#	$(CAIRO_LIBS)

#libpoppler_cairo_la_SOURCES = \
#	CairoFontEngine.cc			\
#	CairoFontEngine.h			\
#	CairoOutputDev.cc			\
#	CairoOutputDev.h

libjpeg_sources = \
	DCTStream.h				\
	DCTStream.cc

libjpeg_libs = \
	$(LIBJPEG_LIBS)

libpng_libs = \
	$(LIBPNG_LIBS)

libjpeg2000_sources = \
	JPXStream.h			\
	JPXStream.cc

#libjpeg2000_sources = \
#	JPEG2000Stream.h			\
#	JPEG2000Stream.cc

#libjpeg2000_libs = \
#	$(LIBOPENJPEG_LIBS)

#zlib_sources = \
#	FlateStream.h				\
#	FlateStream.cc

#zlib_libs = \
#	$(ZLIB_LIBS)

abiword_sources = \
	ABWOutputDev.h				\
	ABWOutputDev.cc

abiword_includes = \
	$(ABIWORD_CFLAGS)

abiword_libs = \
	$(ABIWORD_LIBS)

#cms_includes = $(LCMS_CFLAGS)
#cms_libs = $(LCMS_LIBS)
INCLUDES = \
	-I$(top_srcdir)				\
	-I$(top_srcdir)/goo			\
	$(cms_includes)				\
	$(splash_includes)			\
	$(cairo_includes)			\
	$(arthur_includes)			\
	$(abiword_includes)			\
	$(FREETYPE_CFLAGS)			\
	$(FONTCONFIG_CFLAGS)

lib_LTLIBRARIES = libpoppler.la
noinst_LTLIBRARIES = $(poppler_cairo)		\
	$(poppler_arthur)

libpoppler_la_LIBADD = \
	$(top_builddir)/goo/libgoo.la		\
	$(top_builddir)/fofi/libfofi.la		\
	$(cms_libs)				\
	$(splash_libs)				\
	$(libjpeg_libs)				\
	$(libpng_libs)				\
	$(zlib_libs)				\
	$(libjpeg2000_libs)			\
	$(abiword_libs)				\
	$(FREETYPE_LIBS)			\
	$(FONTCONFIG_LIBS)			\
	$(PTHREAD_LIBS)				\
	$(win32_libs)

libpoppler_la_LDFLAGS = -version-info 5:0:0 
#poppler_includedir = $(includedir)/poppler
#poppler_include_HEADERS = \
#	$(splash_headers)	\
#	Annot.h			\
#	Array.h			\
#	BuiltinFont.h		\
#	BuiltinFontTables.h	\
#	Catalog.h		\
#	CharCodeToUnicode.h	\
#	CMap.h			\
#	DateInfo.h		\
#	Decrypt.h		\
#	Dict.h			\
#	Error.h			\
#	FileSpec.h		\
#	FontEncodingTables.h	\
#	FontInfo.h		\
#	Form.h 			\
#	Function.h		\
#	Gfx.h			\
#	GfxFont.h		\
#	GfxState.h		\
#	GfxState_helpers.h	\
#	GlobalParams.h		\
#	JArithmeticDecoder.h	\
#	JBIG2Stream.h		\
#	Lexer.h			\
#	Link.h			\
#	Movie.h                 \
#	NameToCharCode.h	\
#	Object.h		\
#	OptionalContent.h	\
#	Outline.h		\
#	OutputDev.h		\
#	Page.h			\
#	PageTransition.h	\
#	Parser.h		\
#	PDFDoc.h		\
#	PDFDocEncoding.h	\
#	PopplerCache.h		\
#	ProfileData.h		\
#	PreScanOutputDev.h	\
#	PSTokenizer.h		\
#	Stream-CCITT.h		\
#	Stream.h		\
#	UnicodeMap.h		\
#	UnicodeMapTables.h	\
#	UnicodeTypeTable.h	\
#	UnicodeCClassTables.h	\
#	UnicodeCompTables.h	\
#	UnicodeDecompTables.h	\
#	XRef.h			\
#	CharTypes.h		\
#	CompactFontTables.h	\
#	ErrorCodes.h		\
#	NameToUnicodeTable.h	\
#	PSOutputDev.h		\
#	TextOutputDev.h		\
#	SecurityHandler.h	\
#	UTF8.h			\
#	XpdfPluginAPI.h		\
#	Sound.h			\
#	poppler-config.h

libpoppler_la_SOURCES = \
	$(splash_sources)	\
	$(cairo_sources)	\
	$(arthur_sources)	\
	$(libjpeg_sources)	\
	$(zlib_sources)		\
	$(libjpeg2000_sources)	\
	$(abiword_sources)	\
	Annot.cc		\
	Array.cc 		\
	BuiltinFont.cc		\
	BuiltinFontTables.cc	\
	Catalog.cc 		\
	CharCodeToUnicode.cc	\
	CMap.cc			\
	DateInfo.cc		\
	Decrypt.cc		\
	Dict.cc 		\
	Error.cc 		\
	FileSpec.cc		\
	FontEncodingTables.cc	\
	Form.cc 		\
	FontInfo.cc		\
	Function.cc		\
	Gfx.cc 			\
	GfxFont.cc 		\
	GfxState.cc		\
	GlobalParams.cc		\
	JArithmeticDecoder.cc	\
	JBIG2Stream.cc		\
	Lexer.cc 		\
	Link.cc 		\
	Movie.cc                \
	NameToCharCode.cc	\
	Object.cc 		\
	OptionalContent.cc	\
	Outline.cc		\
	OutputDev.cc 		\
	Page.cc 		\
	PageTransition.cc	\
	Parser.cc 		\
	PDFDoc.cc 		\
	PDFDocEncoding.cc	\
	PopplerCache.cc		\
	ProfileData.cc		\
	PreScanOutputDev.cc \
	PSTokenizer.cc		\
	Stream.cc 		\
	UnicodeMap.cc		\
	UnicodeTypeTable.cc	\
	XRef.cc			\
	PSOutputDev.cc		\
	TextOutputDev.cc	\
	PageLabelInfo.h		\
	PageLabelInfo.cc	\
	SecurityHandler.cc	\
	Sound.cc		\
	XpdfPluginAPI.cc

EXTRA_DIST = gen-unicode-tables.py	\
             GlobalParamsWin.cc

all: poppler-config.h
	$(MAKE) $(AM_MAKEFLAGS) all-am

.SUFFIXES:
.SUFFIXES: .cc .lo .o .obj
$(srcdir)/Makefile.in:  $(srcdir)/Makefile.am  $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh \
		&& exit 0; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --foreign  poppler/Makefile'; \
	cd $(top_srcdir) && \
	  $(AUTOMAKE) --foreign  poppler/Makefile
.PRECIOUS: Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure:  $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4):  $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

poppler-config.h: stamp-h2
	@if test ! -f $@; then \
	  rm -f stamp-h2; \
	  $(MAKE) $(AM_MAKEFLAGS) stamp-h2; \
	else :; fi

stamp-h2: $(srcdir)/poppler-config.h.in $(top_builddir)/config.status
	@rm -f stamp-h2
	cd $(top_builddir) && $(SHELL) ./config.status poppler/poppler-config.h
$(srcdir)/poppler-config.h.in:  $(am__configure_deps) 
	cd $(top_srcdir) && $(AUTOHEADER)
	rm -f stamp-h2
	touch $@

distclean-hdr:
	-rm -f poppler-config.h stamp-h2
install-libLTLIBRARIES: $(lib_LTLIBRARIES)
	@$(NORMAL_INSTALL)
	test -z "$(libdir)" || $(MKDIR_P) "$(DESTDIR)$(libdir)"
	@list='$(lib_LTLIBRARIES)'; for p in $$list; do \
	  if test -f $$p; then \
	    f=$(am__strip_dir) \
	    echo " $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(libLTLIBRARIES_INSTALL) $(INSTALL_STRIP_FLAG) '$$p' '$(DESTDIR)$(libdir)/$$f'"; \
	    $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(libLTLIBRARIES_INSTALL) $(INSTALL_STRIP_FLAG) "$$p" "$(DESTDIR)$(libdir)/$$f"; \
	  else :; fi; \
	done

uninstall-libLTLIBRARIES:
	@$(NORMAL_UNINSTALL)
	@list='$(lib_LTLIBRARIES)'; for p in $$list; do \
	  p=$(am__strip_dir) \
	  echo " $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=uninstall rm -f '$(DESTDIR)$(libdir)/$$p'"; \
	  $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=uninstall rm -f "$(DESTDIR)$(libdir)/$$p"; \
	done

clean-libLTLIBRARIES:
	-test -z "$(lib_LTLIBRARIES)" || rm -f $(lib_LTLIBRARIES)
	@list='$(lib_LTLIBRARIES)'; for p in $$list; do \
	  dir="`echo $$p | sed -e 's|/[^/]*$$||'`"; \
	  test "$$dir" != "$$p" || dir=.; \
	  echo "rm -f \"$${dir}/so_locations\""; \
	  rm -f "$${dir}/so_locations"; \
	done

clean-noinstLTLIBRARIES:
	-test -z "$(noinst_LTLIBRARIES)" || rm -f $(noinst_LTLIBRARIES)
	@list='$(noinst_LTLIBRARIES)'; for p in $$list; do \
	  dir="`echo $$p | sed -e 's|/[^/]*$$||'`"; \
	  test "$$dir" != "$$p" || dir=.; \
	  echo "rm -f \"$${dir}/so_locations\""; \
	  rm -f "$${dir}/so_locations"; \
	done
libpoppler-arthur.la: $(libpoppler_arthur_la_OBJECTS) $(libpoppler_arthur_la_DEPENDENCIES) 
	$(CXXLINK) $(am_libpoppler_arthur_la_rpath) $(libpoppler_arthur_la_OBJECTS) $(libpoppler_arthur_la_LIBADD) $(LIBS)
libpoppler-cairo.la: $(libpoppler_cairo_la_OBJECTS) $(libpoppler_cairo_la_DEPENDENCIES) 
	$(CXXLINK) $(am_libpoppler_cairo_la_rpath) $(libpoppler_cairo_la_OBJECTS) $(libpoppler_cairo_la_LIBADD) $(LIBS)
libpoppler.la: $(libpoppler_la_OBJECTS) $(libpoppler_la_DEPENDENCIES) 
	$(libpoppler_la_LINK) -rpath $(libdir) $(libpoppler_la_OBJECTS) $(libpoppler_la_LIBADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

include ./$(DEPDIR)/ABWOutputDev.Plo
include ./$(DEPDIR)/Annot.Plo
include ./$(DEPDIR)/Array.Plo
include ./$(DEPDIR)/ArthurOutputDev.Plo
include ./$(DEPDIR)/BuiltinFont.Plo
include ./$(DEPDIR)/BuiltinFontTables.Plo
include ./$(DEPDIR)/CMap.Plo
include ./$(DEPDIR)/CairoFontEngine.Plo
include ./$(DEPDIR)/CairoOutputDev.Plo
include ./$(DEPDIR)/Catalog.Plo
include ./$(DEPDIR)/CharCodeToUnicode.Plo
include ./$(DEPDIR)/DCTStream.Plo
include ./$(DEPDIR)/DateInfo.Plo
include ./$(DEPDIR)/Decrypt.Plo
include ./$(DEPDIR)/Dict.Plo
include ./$(DEPDIR)/Error.Plo
include ./$(DEPDIR)/FileSpec.Plo
include ./$(DEPDIR)/FlateStream.Plo
include ./$(DEPDIR)/FontEncodingTables.Plo
include ./$(DEPDIR)/FontInfo.Plo
include ./$(DEPDIR)/Form.Plo
include ./$(DEPDIR)/Function.Plo
include ./$(DEPDIR)/Gfx.Plo
include ./$(DEPDIR)/GfxFont.Plo
include ./$(DEPDIR)/GfxState.Plo
include ./$(DEPDIR)/GlobalParams.Plo
include ./$(DEPDIR)/JArithmeticDecoder.Plo
include ./$(DEPDIR)/JBIG2Stream.Plo
include ./$(DEPDIR)/JPEG2000Stream.Plo
include ./$(DEPDIR)/JPXStream.Plo
include ./$(DEPDIR)/Lexer.Plo
include ./$(DEPDIR)/Link.Plo
include ./$(DEPDIR)/Movie.Plo
include ./$(DEPDIR)/NameToCharCode.Plo
include ./$(DEPDIR)/Object.Plo
include ./$(DEPDIR)/OptionalContent.Plo
include ./$(DEPDIR)/Outline.Plo
include ./$(DEPDIR)/OutputDev.Plo
include ./$(DEPDIR)/PDFDoc.Plo
include ./$(DEPDIR)/PDFDocEncoding.Plo
include ./$(DEPDIR)/PSOutputDev.Plo
include ./$(DEPDIR)/PSTokenizer.Plo
include ./$(DEPDIR)/Page.Plo
include ./$(DEPDIR)/PageLabelInfo.Plo
include ./$(DEPDIR)/PageTransition.Plo
include ./$(DEPDIR)/Parser.Plo
include ./$(DEPDIR)/PopplerCache.Plo
include ./$(DEPDIR)/PreScanOutputDev.Plo
include ./$(DEPDIR)/ProfileData.Plo
include ./$(DEPDIR)/SecurityHandler.Plo
include ./$(DEPDIR)/Sound.Plo
include ./$(DEPDIR)/SplashOutputDev.Plo
include ./$(DEPDIR)/Stream.Plo
include ./$(DEPDIR)/TextOutputDev.Plo
include ./$(DEPDIR)/UnicodeMap.Plo
include ./$(DEPDIR)/UnicodeTypeTable.Plo
include ./$(DEPDIR)/XRef.Plo
include ./$(DEPDIR)/XpdfPluginAPI.Plo

.cc.o:
	$(CXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
	mv -f $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
#	source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXXCOMPILE) -c -o $@ $<

.cc.obj:
	$(CXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ `$(CYGPATH_W) '$<'`
	mv -f $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
#	source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXXCOMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

.cc.lo:
	$(LTCXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
	mv -f $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Plo
#	source='$<' object='$@' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LTCXXCOMPILE) -c -o $@ $<

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs
install-poppler_includeHEADERS: $(poppler_include_HEADERS)
	@$(NORMAL_INSTALL)
	test -z "$(poppler_includedir)" || $(MKDIR_P) "$(DESTDIR)$(poppler_includedir)"
	@list='$(poppler_include_HEADERS)'; for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  f=$(am__strip_dir) \
	  echo " $(poppler_includeHEADERS_INSTALL) '$$d$$p' '$(DESTDIR)$(poppler_includedir)/$$f'"; \
	  $(poppler_includeHEADERS_INSTALL) "$$d$$p" "$(DESTDIR)$(poppler_includedir)/$$f"; \
	done

uninstall-poppler_includeHEADERS:
	@$(NORMAL_UNINSTALL)
	@list='$(poppler_include_HEADERS)'; for p in $$list; do \
	  f=$(am__strip_dir) \
	  echo " rm -f '$(DESTDIR)$(poppler_includedir)/$$f'"; \
	  rm -f "$(DESTDIR)$(poppler_includedir)/$$f"; \
	done

ID: $(HEADERS) $(SOURCES) $(LISP) $(TAGS_FILES)
	list='$(SOURCES) $(HEADERS) $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonemtpy = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	mkid -fID $$unique
tags: TAGS

TAGS:  $(HEADERS) $(SOURCES) poppler-config.h.in $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS) poppler-config.h.in $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	if test -z "$(ETAGS_ARGS)$$tags$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	    $$tags $$unique; \
	fi
ctags: CTAGS
CTAGS:  $(HEADERS) $(SOURCES) poppler-config.h.in $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	list='$(SOURCES) $(HEADERS) poppler-config.h.in $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	test -z "$(CTAGS_ARGS)$$tags$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$tags $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && cd $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) $$here

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

distdir: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -pR $(srcdir)/$$file $(distdir)$$dir || exit 1; \
	    fi; \
	    cp -pR $$d/$$file $(distdir)$$dir || exit 1; \
	  else \
	    test -f $(distdir)/$$file \
	    || cp -p $$d/$$file $(distdir)/$$file \
	    || exit 1; \
	  fi; \
	done
check-am: all-am
check: check-am
all-am: Makefile $(LTLIBRARIES) $(HEADERS) poppler-config.h
installdirs:
	for dir in "$(DESTDIR)$(libdir)" "$(DESTDIR)$(poppler_includedir)"; do \
	  test -z "$$dir" || $(MKDIR_P) "$$dir"; \
	done
install: install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	$(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	  install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	  `test -z '$(STRIP)' || \
	    echo "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'"` install
mostlyclean-generic:

clean-generic:

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
clean: clean-am

clean-am: clean-generic clean-libLTLIBRARIES clean-libtool \
	clean-noinstLTLIBRARIES mostlyclean-am

distclean: distclean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-hdr distclean-tags

dvi: dvi-am

dvi-am:

html: html-am

info: info-am

info-am:

install-data-am: install-poppler_includeHEADERS

install-dvi: install-dvi-am

install-exec-am: install-libLTLIBRARIES

install-html: install-html-am

install-info: install-info-am

install-man:

install-pdf: install-pdf-am

install-ps: install-ps-am

installcheck-am:

maintainer-clean: maintainer-clean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

uninstall-am: uninstall-libLTLIBRARIES \
	uninstall-poppler_includeHEADERS

.MAKE: install-am install-strip

.PHONY: CTAGS GTAGS all all-am check check-am clean clean-generic \
	clean-libLTLIBRARIES clean-libtool clean-noinstLTLIBRARIES \
	ctags distclean distclean-compile distclean-generic \
	distclean-hdr distclean-libtool distclean-tags distdir dvi \
	dvi-am html html-am info info-am install install-am \
	install-data install-data-am install-dvi install-dvi-am \
	install-exec install-exec-am install-html install-html-am \
	install-info install-info-am install-libLTLIBRARIES \
	install-man install-pdf install-pdf-am \
	install-poppler_includeHEADERS install-ps install-ps-am \
	install-strip installcheck installcheck-am installdirs \
	maintainer-clean maintainer-clean-generic mostlyclean \
	mostlyclean-compile mostlyclean-generic mostlyclean-libtool \
	pdf pdf-am ps ps-am tags uninstall uninstall-am \
	uninstall-libLTLIBRARIES uninstall-poppler_includeHEADERS

# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
